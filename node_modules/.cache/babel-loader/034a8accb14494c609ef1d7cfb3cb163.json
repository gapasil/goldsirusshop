{"ast":null,"code":"var _jsxFileName = \"/home/gapasil/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438/\\u0434\\u0437/javascript/goldsirus/src/components/Kalkulator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MyInput } from \"./UI/MyInput/MyInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Kalkulator = _ref => {\n  _s();\n\n  let {\n    rezim\n  } = _ref;\n  let [valueGold, setValueGold] = useState(\"\");\n  let [sumrub, setSumRub] = useState(\"\");\n  let [sumGold, setSumGold] = useState(\"\");\n\n  let callbackValueGold = value => {\n    setValue(valueGold);\n  };\n\n  let callvac;\n  useEffect(() => {\n    if (valueGold >= 1000) {\n      let suma = 6.99 / 1000 * valueGold;\n      setSumRub(Math.floor10(suma, -2));\n    }\n  }, [valueGold]);\n  useEffect(() => {\n    if (value >= 6.99) {\n      let suma = value / 6.99 * 1000;\n      setSumGold(Math.floor10(suma, -2));\n    }\n  }, [value]);\n\n  function decimalAdjust(type, value, exp) {\n    // Если степень не определена, либо равна нулю...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math[type](value);\n    }\n\n    value = +value;\n    exp = +exp; // Если значение не является числом, либо степень не является целым числом...\n\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    } // Сдвиг разрядов\n\n\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? +value[1] - exp : -exp))); // Обратный сдвиг\n\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? +value[1] + exp : exp));\n  }\n\n  if (!Math.floor10) {\n    Math.floor10 = function (value, exp) {\n      return decimalAdjust('floor', value, exp);\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      callback: callback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      placeHolder: sumrub\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Kalkulator, \"3aTxYDk6v5gtnDam8ydv2qwpkdA=\");\n\n_c = Kalkulator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Kalkulator\");","map":{"version":3,"sources":["/home/gapasil/Рабочий стол/Загрузки/дз/javascript/goldsirus/src/components/Kalkulator.jsx"],"names":["React","useState","useEffect","MyInput","Kalkulator","rezim","valueGold","setValueGold","sumrub","setSumRub","sumGold","setSumGold","callbackValueGold","value","setValue","callvac","suma","Math","floor10","decimalAdjust","type","exp","isNaN","NaN","toString","split","callback"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect} from 'react'\nimport {MyInput} from \"./UI/MyInput/MyInput\"\n\nexport const Kalkulator = ({rezim}) => {\n  let [valueGold,setValueGold]= useState(\"\")\n  let [sumrub, setSumRub] = useState(\"\")\n  let [sumGold, setSumGold] = useState(\"\")\n\n  let callbackValueGold = (value) =>{\n    setValue(valueGold)\n  }\n  let callvac\n\n  useEffect(()=>{\n    if(valueGold>=1000){\n      let suma = (6.99/1000)*valueGold;\n      setSumRub(Math.floor10(suma, -2));\n    }\n  },[valueGold])\n\n  useEffect(()=>{\n      if(value>=6.99){\n        let suma = (value/6.99)*1000;\n        setSumGold(Math.floor10(suma, -2));\n      }\n  },[value])\n\n  function decimalAdjust(type, value, exp) {\n    // Если степень не определена, либо равна нулю...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math[type](value);\n    }\n    value = +value;\n    exp = +exp;\n    // Если значение не является числом, либо степень не является целым числом...\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    }\n    // Сдвиг разрядов\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n    // Обратный сдвиг\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n  }\n  if (!Math.floor10) {\n      Math.floor10 = function(value, exp) {\n        return decimalAdjust('floor', value, exp);\n      }\n  }\n  return (\n    <div>\n      <MyInput callback={callback}/>\n      <MyInput placeHolder={sumrub}/>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}