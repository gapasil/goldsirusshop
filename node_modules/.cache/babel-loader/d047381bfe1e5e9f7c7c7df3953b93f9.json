{"ast":null,"code":"var _jsxFileName = \"/home/gapasil/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438/\\u0434\\u0437/javascript/goldsirus/src/components/UI/MyInput/MyInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport style from \"./input.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyInput = _ref => {\n  _s();\n\n  let {\n    rezim\n  } = _ref;\n  let [valueGold, setValueGold] = useState(\"\");\n  let [valueRub, setValueRub] = useState(\"\");\n  let [sumrub, setSumRub] = useState(\"\");\n\n  let callbackValueGold = e => {\n    if (valueRub >= 6.99 && rezim == 2) {\n      let suma = valueRub / 6.99 * 1000;\n      setValueGold(Math.floor10(suma, -2));\n    }\n\n    setValueGold(e.target.value);\n    setValueRub(e.target.value);\n  };\n\n  let callbackValueRub = e => {\n    setValueRub(e.target.value);\n  };\n\n  useEffect(() => {\n    if (valueGold >= 1000 && rezim == 4) {\n      let suma = 12.99 / 1000 * valueGold;\n      setSumRub(Math.floor10(suma, -2));\n    }\n  }, [valueRub]);\n  useEffect(() => {\n    if (valueRub >= 12.99 && rezim == 4) {\n      let suma = valueRub / 12.99 * 1000;\n      setValueGold(Math.floor10(suma, -2));\n    }\n  }, [valueGold]);\n  useEffect(() => {\n    if (valueGold >= 1000 && rezim == 2) {\n      let suma = 6.99 / 1000 * valueGold;\n      setSumRub(Math.floor10(suma, -2));\n    }\n  }, [valueGold]);\n  useEffect(() => {\n    if (valueRub >= 6.99 && rezim == 2) {\n      let suma = valueRub / 6.99 * 1000;\n      setSumGold(Math.floor10(suma, -2));\n    }\n  }, [valueRub]);\n\n  function decimalAdjust(type, value, exp) {\n    // Если степень не определена, либо равна нулю...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math[type](value);\n    }\n\n    value = +value;\n    exp = +exp; // Если значение не является числом, либо степень не является целым числом...\n\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    } // Сдвиг разрядов\n\n\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? +value[1] - exp : -exp))); // Обратный сдвиг\n\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? +value[1] + exp : exp));\n  }\n\n  if (!Math.floor10) {\n    Math.floor10 = function (value, exp) {\n      return decimalAdjust('floor', value, exp);\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kalk\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"continput\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: style.gold,\n        value: valueGold,\n        onChange: callbackValueRub\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"continput\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: style.rub,\n        value: valueRub,\n        onChange: callbackValueGold\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyInput, \"G9Lh8puAQJ2a/RMCe28+rwETRzY=\");\n\n_c = MyInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyInput\");","map":{"version":3,"sources":["/home/gapasil/Рабочий стол/Загрузки/дз/javascript/goldsirus/src/components/UI/MyInput/MyInput.jsx"],"names":["React","useState","useEffect","style","MyInput","rezim","valueGold","setValueGold","valueRub","setValueRub","sumrub","setSumRub","callbackValueGold","e","suma","Math","floor10","target","value","callbackValueRub","setSumGold","decimalAdjust","type","exp","isNaN","NaN","toString","split","gold","rub"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport style from \"./input.module.css\"\n\nexport const MyInput = ({rezim}) => {\n  let [valueGold,setValueGold]= useState(\"\")\n  let [valueRub,setValueRub]= useState(\"\")\n  let [sumrub, setSumRub] = useState(\"\")\n\n  let callbackValueGold = (e) =>{\n    if(valueRub>=6.99 && rezim==2){\n      let suma = (valueRub/6.99)*1000;\n      setValueGold(Math.floor10(suma, -2));\n    }\n    setValueGold(e.target.value)\n    setValueRub(e.target.value)\n  }\n  let callbackValueRub = (e) =>{\n    setValueRub(e.target.value)\n  }\n  useEffect(()=>{\n    if(valueGold>=1000 && rezim==4){\n      let suma = (12.99/1000)*valueGold;\n      setSumRub(Math.floor10(suma, -2));\n    }\n  },[valueRub])\n\n  useEffect(()=>{\n      if(valueRub>=12.99 && rezim==4){\n        let suma = (valueRub/12.99)*1000;\n        setValueGold(Math.floor10(suma, -2));\n      }\n  },[valueGold])\n  \n  useEffect(()=>{\n    if(valueGold>=1000 && rezim==2){\n      let suma = (6.99/1000)*valueGold;\n      setSumRub(Math.floor10(suma, -2));\n    }\n  },[valueGold])\n\n  useEffect(()=>{\n      if(valueRub>=6.99 && rezim==2){\n        let suma = (valueRub/6.99)*1000;\n        setSumGold(Math.floor10(suma, -2));\n      }\n  },[valueRub])\n\n  function decimalAdjust(type, value, exp) {\n    // Если степень не определена, либо равна нулю...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math[type](value);\n    }\n    value = +value;\n    exp = +exp;\n    // Если значение не является числом, либо степень не является целым числом...\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    }\n    // Сдвиг разрядов\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n    // Обратный сдвиг\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n  }\n  if (!Math.floor10) {\n      Math.floor10 = function(value, exp) {\n        return decimalAdjust('floor', value, exp);\n      }\n  }\n    return (\n        <div className=\"kalk\">\n          <div className='continput'>\n          <input className={style.gold} value={valueGold} onChange={callbackValueRub} />\n          </div>     \n          <div className='continput'>\n            <input className={style.rub} value={valueRub} onChange={callbackValueGold} />\n          </div>      \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}